from socket import *
import json
import time
from scd30_i2c import SCD30
from gpiozero import LED
from gpiozero import Button
import threading

try: 

    scd30 = SCD30()

    scd30.set_measurement_interval(2)
    scd30.start_periodic_measurement()

    #serverPort = 12000
    #serverSocket = socket(AF_INET, SOCK_STREAM)
    #serverSocket.bind(('', serverPort))
    #serverSocket.listen(1)

    serverName = '255.255.255.255'
    serverPort = 10100
    clientSocket = socket(AF_INET, SOCK_DGRAM)
    clientSocket.setsockopt(SOL_SOCKET, SO_BROADCAST, 1)

    time.sleep(2)
    #led = LED(18)
    button = Button(23)
    
    #connectionSocket, addr = serverSocket.accept()

    def main_stuff():
        m = scd30.read_measurement()
        if m is not None:
            jsonM = json.dumps({"location": "R-D3.07", "humidity": round(m[2]), "cO2": round(m[0]), "temperature": round(m[1])})
#            connectionSocket.send(jsonM.encode())
                
#            if m[0] < 1000:
#               led.off()

#            if m[0] >= 1000:
#               led.on()
    def interval_sensor():
        if scd30.get_data_ready():
            main_stuff()

            time.sleep(10)
        else:
            time.sleep(0.2)
    
    def button_sensor():
        if button.is_pressed:
            main_stuff()

        time.sleep(1)

    while True:

        t1 = threading.Thread(target=interval_sensor)
        t2 = threading.Thread(target=button_sensor)

        t1.start()
        t2.start()

except KeyboardInterrupt:
    print('Interrupted')

t1.join()
t2.join()
clientSocket.close()
